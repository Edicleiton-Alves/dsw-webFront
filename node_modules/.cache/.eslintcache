[{"C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\App\\index.js":"2","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\index.js":"3","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\User\\index.js":"4","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\List\\index.js":"5","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\Edit\\index.js":"6","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\FindById\\index.js":"7","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\ListGamesById\\index.js":"8","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\ListAllGames\\index.js":"9","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\Add\\index.js":"10","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\User\\Login\\index.js":"11","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\services\\Category\\index.js":"12","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\services\\User\\index.js":"13","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\services\\shared\\api.js":"14"},{"size":292,"mtime":1644281194918,"results":"15","hashOfConfig":"16"},{"size":1991,"mtime":1644284114370,"results":"17","hashOfConfig":"16"},{"size":332,"mtime":1644281194916,"results":"18","hashOfConfig":"16"},{"size":53,"mtime":1644281194917,"results":"19","hashOfConfig":"16"},{"size":3178,"mtime":1644281194913,"results":"20","hashOfConfig":"16"},{"size":2111,"mtime":1644281194911,"results":"21","hashOfConfig":"16"},{"size":2718,"mtime":1644281194912,"results":"22","hashOfConfig":"16"},{"size":2683,"mtime":1644281194915,"results":"23","hashOfConfig":"16"},{"size":2242,"mtime":1644281194914,"results":"24","hashOfConfig":"16"},{"size":1878,"mtime":1644281194910,"results":"25","hashOfConfig":"16"},{"size":2089,"mtime":1644285315404,"results":"26","hashOfConfig":"16"},{"size":836,"mtime":1644281194918,"results":"27","hashOfConfig":"16"},{"size":194,"mtime":1644281194919,"results":"28","hashOfConfig":"16"},{"size":494,"mtime":1644281194920,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"gz2x4h",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\index.js",[],["64","65"],"C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\App\\index.js",[],"C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\index.js",[],"C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\User\\index.js",[],"C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\List\\index.js",["66"],"import React, { useState, useEffect } from \"react\";\r\nimport CategoryDataService from \"../../../services/Category/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nconst List = () => {\r\n  const [categorys, setCategorys] = useState([]);\r\n  const [currentCategory, setCurrentCategory] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchName, setSearchName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveCategorys();\r\n  }, []);\r\n\r\n  const onChangeSearchName = (e) => {\r\n    const searchName = e.target.value;\r\n    setSearchName(searchName);\r\n  };\r\n\r\n  const retrieveCategorys = () => {\r\n    CategoryDataService.getAllCategorys()\r\n      .then((response) => {\r\n        setCategorys(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const setActiveCategory = (category, index) => {\r\n    setCurrentCategory(category);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  const findByName = () => {\r\n    if (searchName !== \"\") {\r\n      CategoryDataService.findByName(searchName)\r\n        .then((response) => {\r\n          setCategorys(response.data);\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    } else {\r\n      retrieveCategorys();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"list row\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nome...\"\r\n            value={searchName}\r\n            onChange={onChangeSearchName}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByName}\r\n            >\r\n              Pesquisar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <h4>Lista de Categoria de Jogos</h4>\r\n\r\n        <ul className=\"list-group\">\r\n          {categorys &&\r\n            categorys.map((category, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => setActiveCategory(category, index)}\r\n                key={index}\r\n              >\r\n                {category.name}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        {currentCategory ? (\r\n          <div>\r\n            <h4>Descrição da Categoria</h4>\r\n            <div>\r\n              <label>\r\n                <strong>Nome: </strong>\r\n              </label>\r\n              {currentCategory.name}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <strong>Id: </strong>\r\n              </label>\r\n              {currentCategory.id}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\Edit\\index.js",["67","68","69"],"import React, { useState, useEffect } from \"react\";\r\nimport CategoryDataService from \"../../../services/Category/index\";\r\n\r\nconst Edit = (props) => {\r\n  const [currentCategory, setCurrentCategory] = useState(initialCategoryState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const initialCategoryState = {\r\n    id: null,\r\n    name: \"\",\r\n  };\r\n\r\n  const getCategory = (id) => {\r\n    CategoryDataService.get(id)\r\n      .then((response) => {\r\n        setCurrentCategory(response.data);\r\n        console.log(\"->\" + response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"->\" + e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategory(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCurrentCategory({ ...currentCategory, [name]: value });\r\n  };\r\n\r\n  const updateCategory = () => {\r\n    CategoryDataService.update(currentCategory.id, currentCategory)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setMessage(\"The category was updated successfully!\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteCategory = () => {\r\n    CategoryDataService.remove(currentCategory.id)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        props.history.push(\"/category\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentCategory ? (\r\n        <div className=\"edit-form\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={currentCategory.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </form>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\FindById\\index.js",["70","71","72"],"import React, { useState, useEffect } from \"react\";\r\nimport CategoryDataService from \"../../../services/Category/index\";\r\n\r\nconst FindById = (props) => {\r\n  const initialCategoryState = {\r\n    id: null,\r\n    name: \"\",\r\n  };\r\n\r\n  const [currentCategory, setCurrentCategory] = useState(initialCategoryState);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [categorys, setCategorys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    retrieveCategorys();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getCategory(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const onChangeSearchName = (e) => {\r\n    const searchName = e.target.value;\r\n    setSearchName(searchName);\r\n  };\r\n\r\n  const retrieveCategorys = () => {\r\n    CategoryDataService.getByIdCategory()\r\n      .then((response) => {\r\n        setCategorys(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const getCategory = (id) => {\r\n    CategoryDataService.getByIdCategory(searchName)\r\n      .then((response) => {\r\n        setCurrentCategory(response.data);\r\n        console.log(\"->\" + response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"->\" + e);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCurrentCategory({ ...currentCategory, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentCategory ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Categoria</h4>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Buscar por ID...\"\r\n              value={searchName}\r\n              onChange={onChangeSearchName}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={getCategory}\r\n              >\r\n                Pesquisar pelo ID da categoria\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Nome da Categoria</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={currentCategory.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </form>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindById;\r\n","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\ListGamesById\\index.js",["73","74","75"],"import React, { useState, useEffect } from \"react\";\r\nimport CategoryDataService from \"../../../services/Category/index\";\r\n\r\nconst FindById = (props) => {\r\n  const initialCategoryState = {\r\n    id: null,\r\n    name: \"\",\r\n  };\r\n\r\n  const [currentCategory, setCurrentCategory] = useState(initialCategoryState);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [categorys, setCategorys] = useState([]);\r\n\r\n  const onChangeSearchName = (e) => {\r\n    const searchName = e.target.value;\r\n    setSearchName(searchName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveCategorys();\r\n  }, []);\r\n\r\n  const retrieveCategorys = () => {\r\n    CategoryDataService.getById()\r\n      .then((response) => {\r\n        setCategorys(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const getCategory = (id) => {\r\n    CategoryDataService.getById(searchName)\r\n      .then((response) => {\r\n        setCurrentCategory(response.data);\r\n        console.log(\"->\" + response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"->\" + e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategory(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCurrentCategory({ ...currentCategory, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentCategory ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Pesquisa de Jogos</h4>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Buscar por ID...\"\r\n              value={searchName}\r\n              onChange={onChangeSearchName}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={getCategory}\r\n              >\r\n                Pesquisar por ID\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Nome</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={currentCategory.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </form>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindById;\r\n","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\ListAllGames\\index.js",["76"],"import React, { useState, useEffect } from \"react\";\r\nimport CategoryDataService from \"../../../services/Category/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nconst ListAllGames = () => {\r\n  const [categorys, setGames] = useState([]);\r\n  const [currentCategory, setCurrentCategory] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    retrieveCategorys();\r\n  }, []);\r\n\r\n  const retrieveCategorys = () => {\r\n    CategoryDataService.getAll()\r\n      .then((response) => {\r\n        setGames(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const setActiveCategory = (category, index) => {\r\n    setCurrentCategory(category);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"list row\">\r\n      <div className=\"col-md-6\">\r\n        <h4>Lista de Jogos</h4>\r\n\r\n        <ul className=\"list-group\">\r\n          {categorys &&\r\n            categorys.map((category, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => setActiveCategory(category, index)}\r\n                key={index}\r\n              >\r\n                {category.name}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        {currentCategory ? (\r\n          <div>\r\n            <h4>Descrição do Jogo</h4>\r\n            <div>\r\n              <label>\r\n                <strong>Nome:</strong>\r\n              </label>\r\n              {currentCategory.name}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <strong>Quantidade:</strong>\r\n              </label>\r\n              {currentCategory.quantityInPackage}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <strong>Plataforma:</strong>\r\n              </label>\r\n              {currentCategory.unitOfPlatform}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListAllGames;\r\n","C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\Category\\Add\\index.js",[],"C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\components\\User\\Login\\index.js",[],"C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\services\\Category\\index.js",[],"C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\services\\User\\index.js",[],"C:\\Users\\User\\Desktop\\Web - Trabalho Edicleiton\\FRONT\\src\\services\\shared\\api.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":5,"column":58,"nodeType":"83","messageId":"87","endLine":5,"endColumn":78},{"ruleId":"81","severity":1,"message":"88","line":33,"column":9,"nodeType":"83","messageId":"84","endLine":33,"endColumn":23},{"ruleId":"81","severity":1,"message":"89","line":44,"column":9,"nodeType":"83","messageId":"84","endLine":44,"endColumn":23},{"ruleId":"81","severity":1,"message":"90","line":11,"column":19,"nodeType":"83","messageId":"84","endLine":11,"endColumn":29},{"ruleId":"81","severity":1,"message":"91","line":13,"column":10,"nodeType":"83","messageId":"84","endLine":13,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":21,"column":6,"nodeType":"94","endLine":21,"endColumn":29,"suggestions":"95"},{"ruleId":"81","severity":1,"message":"90","line":11,"column":19,"nodeType":"83","messageId":"84","endLine":11,"endColumn":29},{"ruleId":"81","severity":1,"message":"91","line":13,"column":10,"nodeType":"83","messageId":"84","endLine":13,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":48,"column":6,"nodeType":"94","endLine":48,"endColumn":29,"suggestions":"96"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-use-before-define","'initialCategoryState' was used before it was defined.","usedBeforeDefined","'updateCategory' is assigned a value but never used.","'deleteCategory' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'categorys' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategory'. Either include it or remove the dependency array.","ArrayExpression",["99"],["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"101","fix":"103"},"Update the dependencies array to be: [getCategory, props.match.params.id]",{"range":"104","text":"105"},{"range":"106","text":"105"},[588,611],"[getCategory, props.match.params.id]",[1239,1262]]